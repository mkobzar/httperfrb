#!/bin/sh
#
# BenchToGraph : Graph modeler for Autobench results files
# written by Samuel Dupas <samuel.dupas@synaptique.co.uk>
#
# Thanks to Julian T J Midgley <jtjm@xenoclast.org>
#

if [ $# -lt 2 ] ; then
    echo "Usage          : bench2graph PARAM_1 PARAM_2 [ PARAM_3 ... PARAM_N ]"
    echo "Parameter 1    : autobench results file"
    echo "Parameter 2    : name of the output file"
    echo "Parameter 3    : graph title"
    echo "Parameter 4..N : [optional] columns to display in the graphic"
    exit 1
fi

if [ ! -f $1 ] ; then
    echo "Incorrect file format"
    exit 2
fi

if [ -z "$2" ] ; then
    echo "Graph title required"
    exit 2
fi

if [ -z "$3" ] ; then
    echo "Graph title required"
    exit 2
fi

input=$1
shift

output=$1
if [ `echo $output |cut -c 1` != '/' ] ; then
	output=`pwd`/$output
fi
shift

title=$1
shift

while [ $# -ne 0 ] ; do
    liste="$liste,$1,"
    shift
done

if [ ! -d /tmp/graph_script ] ; then
    mkdir /tmp/graph_script
fi
mkdir /tmp/graph_script/$$

cp $input /tmp/graph_script/$$/results.csv
cd /tmp/graph_script/$$
sed -i 's/,/\t/g'  results.csv 
nblines=`cat results.csv | wc -l`
nblines=`expr $nblines - 1`

legend=`head -1 results.csv`
i=1
for col in $legend 
do
    if [ $i -ne 1 ] ; then
	if [ `echo -n $liste | wc -c` -eq 0 ] ; then
	    tail -$nblines results.csv | gawk '{print $1 "	" $line}' line=$i > $col
	    files="$files $col" 
	elif `echo $liste | grep ",${i}," > /dev/null` ; then
	    tail -$nblines results.csv | gawk '{print $1 "	" $line}' line=$i > $col
	    files="$files $col"
	fi
    fi
    i=`expr $i + 1`
done

echo set terminal jpeg large size 1024,768 > gnuplot.cmd
echo set key outside below >> gnuplot.cmd
#echo set datafile separator \",\" >> gnuplot.cmd
echo set key box >> gnuplot.cmd
echo set grid >> gnuplot.cmd
echo set output \"${output}\" >> gnuplot.cmd
echo set style data linespoints >> gnuplot.cmd
echo set title \"$title\" >> gnuplot.cmd
echo -n plot >> gnuplot.cmd
j=0
for col in $files ; do
    if [ $j -ne 0 ] ; then
	echo -n "," >> gnuplot.cmd
    fi
    echo -n " \"${col}\"" >> gnuplot.cmd
    j=`expr $j + 1`
done
echo >> gnuplot.cmd

gnuplot gnuplot.cmd

rm -rf /tmp/graph_script/$$
